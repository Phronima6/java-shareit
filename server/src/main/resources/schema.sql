DROP TABLE IF EXISTS users, items, item_requests, bookings, comments;

CREATE TABLE IF NOT EXISTS users (
    email VARCHAR(255) NOT NULL,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS item_requests (
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description VARCHAR(255) NOT NULL,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    requestor_id BIGINT NOT NULL,
    CONSTRAINT fk_requestor_item_requests FOREIGN KEY (requestor_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
    available BOOLEAN NOT NULL,
    description VARCHAR(255) NOT NULL,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    owner_id BIGINT NOT NULL,
    request_id BIGINT,
    CONSTRAINT fk_owner_items FOREIGN KEY (owner_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_request_items FOREIGN KEY (request_id) REFERENCES item_requests(id)
);

CREATE TABLE IF NOT EXISTS bookings (
    booker_id BIGINT NOT NULL,
    end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    item_id BIGINT NOT NULL,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status VARCHAR(255) NOT NULL,
    CONSTRAINT fk_booker_bookings FOREIGN KEY (booker_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_item_bookings FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE,
    CONSTRAINT chk_start_end CHECK (start_date <> end_date)
);

CREATE TABLE IF NOT EXISTS comments (
    author_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    item_id BIGINT NOT NULL,
    text VARCHAR(255) NOT NULL,
    CONSTRAINT fk_author_comments FOREIGN KEY (author_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_item_comments FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE CASCADE
);